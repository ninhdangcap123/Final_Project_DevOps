pipeline {
    agent any

    environment {
        AWS_REGION = 'us-east-1'
        AWS_DEFAULT_REGION = "${AWS_REGION}"
        ECR_REPOSITORY = '084375555299.dkr.ecr.us-east-1.amazonaws.com/backend'
        IMAGE_TAG = 'latest'
        CLUSTER_NAME = 'ninhnh-vti-cluster'
        DEPLOYMENT_NAME = 'python-app-deployment'
        AWS_ACCOUNT_ID = '084375555299'
    }

    stages {
        stage('Check User') {
            steps {
                sh 'whoami'
            }
        }

        stage('Clone Repository') {
            steps {
                git url: 'https://github.com/ninhdangcap123/Final_Project_DevOps.git', branch: 'main'
            }
        }

        stage('Check AWS CLI') {
            steps {
                sh 'echo $PATH'
                sh 'aws --version'
            }
        }

        stage('List Files') {
            steps {
                dir('application/backend') {
                    sh 'ls -l'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    dir('application/backend') {
                        sh 'ls -l'
                        sh "docker build -t ${ECR_REPOSITORY}:${IMAGE_TAG} ."
                    }
                }
            }
        }

        stage('Push to ECR') {
            steps {
                script {
                    sh '''
                    docker tag ${ECR_REPOSITORY}:${IMAGE_TAG} ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPOSITORY}:${IMAGE_TAG}
                    '''
                    sh '''
                    docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPOSITORY}:${IMAGE_TAG}
                    '''
                }
            }
        }

        stage('Deploy to EKS') {
            steps {
                script {
                    // Update the Kubernetes deployment with the new image
                    // fix this code to work on frist deploy
                    withCredentials([usernamePassword(credentialsId: 'aws-credentials', usernameVariable: 'AWS_ACCESS_KEY_ID', passwordVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                        sh '''
                        kubectl set image deployment/${DEPLOYMENT_NAME} ${DEPLOYMENT_NAME}=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPOSITORY}:${IMAGE_TAG}
                        '''
                    }
                }
            }
        }
    }

    post {
        success {
            echo 'Deployment to EKS was successful!'
        }
        failure {
            echo 'Deployment to EKS failed.'
        }
    }
}
